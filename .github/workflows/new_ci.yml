name: CMake CI

on:
  push:
    tags:
      - 'v*'

jobs:
  build-mac:
    name: Build on macOS
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Install dependencies (macOS)
        run: |
          brew update
          brew install fltk tbb cmake

      - name: Configure & build as .app bundle
        run: |
          cmake -S . -B build \
            -DCMAKE_BUILD_TYPE=Release \
            -DCMAKE_CXX_STANDARD=20 \
            -DCMAKE_CXX_EXTENSIONS=OFF \
            -DCMAKE_CXX_FLAGS="-O3 -ffast-math" \
            -G "Unix Makefiles" \
            -DCMAKE_OSX_ARCHITECTURES="$(uname -m)" \
            -DSHARK_MACOS_BUNDLE=ON
          cmake --build build --config Release --parallel $(sysctl -n hw.logicalcpu)

      - name: Verify static linking
        run: |
          otool -L build/Shark.app/Contents/MacOS/shark | grep -E 'fltk|tbb' && {
            echo "❌ Linked to shared FLTK or TBB"
            exit 1
          } || echo "✅ Static linking confirmed"

      - name: Package macOS .app into zip
        run: |
          cd build
          zip -r Shark-macos.zip Shark.app

      - name: Upload macOS bundle
        uses: actions/upload-artifact@v4
        with:
          name: shark-macos
          path: build/Shark-macos.zip

  build-win:
    …  # unchanged

  release:
    needs: [build-mac, build-win]
    runs-on: ubuntu-latest
    steps:
      - name: Download macOS zip
        uses: actions/download-artifact@v4
        with:
          name: shark-macos
          path: ./mac

      - name: Download Windows zip
        uses: actions/download-artifact@v4
        with:
          name: shark-windows
          path: ./win

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload macOS ZIP to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./mac/Shark-macos.zip
          asset_name: Shark-macos.zip
          asset_content_type: application/zip

      - name: Upload Windows ZIP to release
        …  # unchanged
