name: CMake CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    runs-on: ${{ matrix.os }}

    steps:
      # 1) Checkout code + submodules
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          fetch-depth: 0

      # 2) Install FLTK & TBB on Linux/macOS
      - name: Install deps (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          if [ "$(uname)" = "Linux" ]; then
            sudo apt-get update
            sudo apt-get install -y libfltk1.3-dev libtbb-dev cmake
          else
            brew update
            brew install fltk tbb cmake
          fi

      # 3) Setup vcpkg on Windows and install FLTK & TBB
      - name: Setup vcpkg & install deps (Windows)
        if: runner.os == 'Windows'
        uses: lukka/run-vcpkg@v11
        with:
          # install FLTK and TBB for the x64 toolchain
          packages: fltk tbb
          triplet: x64-windows

      # 4) Configure with CMake (Linux/macOS)
      - name: Configure (Linux/macOS)
        if: runner.os != 'Windows'
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release

      # 5) Configure with CMake (Windows + vcpkg toolchain)
      - name: Configure (Windows)
        if: runner.os == 'Windows'
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release `
             `-DCMAKE_TOOLCHAIN_FILE="${{ github.workspace }}\\vcpkg\\scripts\\buildsystems\\vcpkg.cmake"

      # 6) Build
      - name: Build
        run: cmake --build build --config Release

      # 7) Inspect build outputs
      - name: List build dir
        run: ls -R build

      # 8) Upload the compiled binary
      - name: Upload shark binary
        uses: actions/upload-artifact@v4
        with:
          name: shark-${{ matrix.os }}
          path: build/shark*
